name: Water Potability CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: royanrosyad313/water-potability-ml
  EXPERIMENT_NAME: Water_Potability_CI

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8

    - name: Lint code
      run: |
        flake8 MLProject/modelling.py --count --select=E9,F63,F7,F82 --show-source --statistics

  build-and-train:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} .
        docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

    - name: Create model output directory
      run: mkdir -p model_output

    - name: Run ML training with MLflow
      env:
        DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
        DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        GITHUB_RUN_NUMBER: ${{ github.run_number }}
        GITHUB_SHA: ${{ github.sha }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_ACTOR: ${{ github.actor }}
      run: |
        docker run --rm \
          -e DAGSHUB_USERNAME="${{ secrets.DAGSHUB_USERNAME }}" \
          -e DAGSHUB_TOKEN="${{ secrets.DAGSHUB_TOKEN }}" \
          -e DOCKER_HUB_USERNAME="${{ secrets.DOCKER_HUB_USERNAME }}" \
          -e GITHUB_RUN_NUMBER="${{ github.run_number }}" \
          -e GITHUB_SHA="${{ github.sha }}" \
          -e GITHUB_REF="${{ github.ref }}" \
          -e GITHUB_REPOSITORY="${{ github.repository }}" \
          -e GITHUB_ACTOR="${{ github.actor }}" \
          -v $(pwd)/model_output:/app/MLProject/model_output \
          ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}

    - name: List files in model_output
      run: |
        echo "Contents of model_output directory:"
        ls -la model_output/

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-artifacts
        path: model_output/
        retention-days: 30
        if-no-files-found: warn

    - name: Setup Google Drive credentials
      if: success()
      run: |
        echo "${{ secrets.GOOGLE_DRIVE_CREDENTIALS }}" | base64 -d > service_account.json
        # Verify file was created correctly (without showing content)
        ls -la scripts/service_account.json

    - name: Upload to Google Drive
      if: success()
      run: |
        pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client
        cd scripts
        python scripts/upload-to-drive.py

    - name: Push Docker image
      if: success()
      run: |
        docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy:
    needs: build-and-train
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy notification
      run: |
        echo "🚀 Model training completed successfully!"
        echo "📊 MLflow tracking: https://dagshub.com/${{ secrets.DAGSHUB_USERNAME }}/Water-Quality-Tracking-Model.mlflow"
        echo "🐳 Docker image: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}"
        echo "📁 Artifacts uploaded to Google Drive"
